name: Laravel Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, dom, fileinfo, mysql, pdo_sqlite, gd
        coverage: xdebug
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Copy .env
      run: cp .env.example .env
    
    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-
    
    - name: Install Dependencies
      run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress
    
    - name: Install Node dependencies
      run: npm ci
    
    - name: Prepare public build directory
      run: |
        mkdir -p public/build/assets
    
    - name: Create placeholder assets
      run: |
        touch public/build/assets/app.css
        touch public/build/assets/app.js
    
    - name: Build frontend assets
      run: npm run build
      continue-on-error: true
    
    - name: Create fallback Vite manifest
      run: |
        if [ ! -f public/build/manifest.json ]; then
          echo '{
            "resources/js/app.tsx": {
              "file": "assets/app.js", 
              "isEntry": true,
              "src": "resources/js/app.tsx"
            },
            "resources/css/app.css": {
              "file": "assets/app.css",
              "isEntry": true,
              "src": "resources/css/app.css"
            }
          }' > public/build/manifest.json
          echo "Created fallback Vite manifest"
        fi
    
    - name: Generate key
      run: php artisan key:generate
    
    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    
    - name: Create SQLite Database
      run: |
        touch database/testing.sqlite
        chmod -R 777 database/testing.sqlite
    
    - name: Execute tests via Pest
      env:
        DB_CONNECTION: sqlite
        DB_DATABASE: database/testing.sqlite
        CACHE_DRIVER: array
        SESSION_DRIVER: array
        QUEUE_DRIVER: sync
        VITE_MANIFEST_FALLBACK: "true"
      run: |
        php artisan config:clear
        php artisan view:clear
        chmod -R 777 public/build
        php artisan migrate:fresh
        vendor/bin/pest

